name: Wisecow CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Test the application
  test:
    name: Test Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Test Docker build
        run: |
          docker build -t wisecow-test .
          
      - name: Test application functionality
        run: |
          # Start container in background
          docker run -d --name wisecow-test -p 4499:4499 wisecow-test
          
          # Wait for container to start
          sleep 5
          
          # Test HTTP endpoint
          response=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:4499 || echo "failed")
          if [ "$response" = "200" ]; then
            echo "Application test passed"
          else
            echo "Application test failed - HTTP $response"
            docker logs wisecow-test
            exit 1
          fi
          
          # Cleanup
          docker stop wisecow-test
          docker rm wisecow-test

  # Job 2: Build and push Docker image
  build-push:
    name: Build and Push Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    permissions:
      contents: read
      packages: write
      id-token: write

    outputs:
      image-tag: ${{ steps.meta.outputs.tags }}
      image-digest: ${{ steps.build.outputs.digest }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image build summary
        run: |
          echo "**Docker Image Built Successfully**" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ steps.meta.outputs.tags }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** [ghcr.io/${{ github.repository }}](https://ghcr.io/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY

  # Job 3: Deploy to Kubernetes
  deploy-to-k8s:
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: build-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment:
      name: production
      url: ${{ vars.CLUSTER_URL || 'http://localhost:4499' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Setup Kind
        uses: helm/kind-action@v1.8.0
        with:
          cluster_name: wisecow-ci
          config: |
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
            - role: control-plane

      - name: Load Docker image into Kind
        run: |
          # Get the first image tag from the build job
          IMAGE_TAG=$(echo "${{ needs.build-push.outputs.image-tag }}" | head -n1)
          echo "Loading image: $IMAGE_TAG"
          
          # Pull and load image into kind cluster
          docker pull $IMAGE_TAG
          kind load docker-image $IMAGE_TAG --name wisecow-ci

      - name: Verify cluster connection
        run: |
          kubectl cluster-info
          kubectl get nodes

      - name: Update deployment image
        run: |
          # Get the first image tag from the build job
          IMAGE_TAG=$(echo "${{ needs.build-push.outputs.image-tag }}" | head -n1)
          echo "Deploying image: $IMAGE_TAG"
          
          # Update the deployment with new image
          sed -i "s|wisecow:local|${IMAGE_TAG}|g" k8s/deployment.yaml
          sed -i "s|imagePullPolicy: IfNotPresent|imagePullPolicy: Never|g" k8s/deployment.yaml

      - name: Apply Kubernetes manifests
        run: |
          echo "Applying Kubernetes manifests..."
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl apply -f k8s/ingress.yaml

      - name: Wait for deployment
        run: |
          echo "Waiting for deployment to be ready..."
          kubectl rollout status deployment/wisecow --timeout=300s

      - name: Rollback on deployment failure
        if: failure()
        run: |
          echo "Deployment failed, initiating rollback..."
          kubectl rollout undo deployment/wisecow
          kubectl rollout status deployment/wisecow --timeout=180s
          echo "Rollback completed"

      - name: Verify deployment
        run: |
          echo "Verifying deployment..."
          kubectl get pods -l app=wisecow
          kubectl get svc wisecow
          kubectl get ingress wisecow-ingress
          
          # Check if pods are running
          RUNNING_PODS=$(kubectl get pods -l app=wisecow --field-selector=status.phase=Running --no-headers | wc -l)
          if [ "$RUNNING_PODS" -gt 0 ]; then
            echo "Deployment successful! $RUNNING_PODS pod(s) running"
          else
            echo "Deployment failed - no running pods"
            kubectl describe pods -l app=wisecow
            exit 1
          fi

      - name: Post-deployment summary
        run: |
          echo "**Deployment Completed Successfully**" >> $GITHUB_STEP_SUMMARY
          echo "**Image:** \`${{ needs.build-push.outputs.image-tag }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Cluster:** \`$(kubectl config current-context)\`" >> $GITHUB_STEP_SUMMARY
          echo "**Pods:** \`$(kubectl get pods -l app=wisecow --no-headers | wc -l)\` running" >> $GITHUB_STEP_SUMMARY
          
          # Show access instructions
          echo "## Access Your Application" >> $GITHUB_STEP_SUMMARY
          echo "- **Direct NodePort:** http://localhost:31499" >> $GITHUB_STEP_SUMMARY  
          echo "- **Via Ingress:** http://wisecow.local:4499 (HTTP) | https://wisecow.local:54499 (HTTPS)" >> $GITHUB_STEP_SUMMARY
          echo "- **Port Forward:** \`kubectl port-forward svc/wisecow 4499:4499\`" >> $GITHUB_STEP_SUMMARY
